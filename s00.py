# １ 変数の使い方
# 変数を使って、「ねずこ」と「ぜんいつ」 は仲間ですとprint文を使って表示させてみよう
# なお、ねずこをname1、ぜんいつをname2として定義してください。
name1 ="ねずこ"
name2 = "ぜんいつ"
print(f"{name1}と{name2}は仲間です")

# ２ if文の使い方
# １のソースを改造して、name2が敵キャラの「むざん」だった場合に
# 仲間ではありませんと表示させてみよう。
name2 = "むざん"
if name2 == "むざん":
    print(f"{name2}は仲間ではありません")

# ３ 配列の使い方
# 以下の配列に対して、キャラクター「ぜんいつ」を追加してみよう。 appendを使うことで追加できます。
names=["たんじろう","ぎゆう","ねずこ","むざん"]
names.append("ぜんいつ")
print(names)

# ４ for文の使い方
# ３のソースコードで使用したnameのキャラクターをfor文を使って
# １行に１キャラクター表示してみよう
for i in names:
    print(i)

# ５ 関数の使い方
# 関数を１つ作ってみましょう。
# 関数化したら、関数を呼び出して結果が表示されることを確認してみよう。
def menber():
    print(names)
menber()

# ６ 引数を使う関数の使い方
# 以下のようにhikisuuの部分が引数です。引数は関数の外から変数を関数内に渡すことができます。\n このような引数を使う関数を作成してみよう。
# def test(hikisuu):
# 【仕様】
# 関数名：なんでも良い
# 引数：キャラクターの名前を格納する変数
# 関数で行う処理：キャラクターのリスト（３、４で使ったもの）の中に、
# 引数で入力されたキャラクター名が存在するか確認して結果をprint文で表示させる
# 例）引数が「ぎゆう」→nmaeにぎゆうが存在する→ぎゆうは含まれますと表示
def menber(name):
    if name in names:
        print(f'{name}は含まれます')
    else:
        print(f'{name}は含まれていません')

menber("今井")